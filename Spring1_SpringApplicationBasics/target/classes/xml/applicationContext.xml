<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd"
	default-autowire="byType">

	<!--  Simple bean declaration
			note:primary keyword used in autowiring example later -->
	<bean id="grain" class="food.Grain" primary="true"></bean>
	
	<!-- Bean declaration with name -->
	<bean id="vegWithName" class="food.Vegetable">
		<property name="name" value="Potato"/>
	</bean>
	
	<bean id="fruitWithListAndMap" class="food.Fruit">
		<property name="fruitNameList">
			<list>
				<value>apple</value>
				<value>banana</value>
				<value>orange</value>
			</list>
		</property>
		<property name="fruitNameMap">
			<map>
				<entry key="strawberry" value="red"/>
				<entry key="plum" value="purple"/>
				<entry key="avocado" value="green"/>
			</map>
		</property>
	</bean>
	
	<bean id="cheeseUsingPNamespace" class="food.Cheese" p:name="Cheddar" />
	
	<context:property-placeholder location="app.properties" />
	<bean id="meatUsingExternalProperties" class="food.Meat">
		<property name="definition" value="${def-meat}" />
	</bean>
	
	<bean id="meal" class="food.Meal">
		<property name ="cheese" ref="cheeseUsingPNamespace"/>
		<property name ="fruit" ref="fruitWithListAndMap"/>
		<property name ="grain" ref="grain"/>
		<property name ="meat" ref="meatUsingExternalProperties"/>
		<property name ="vegetable" ref="vegWithName"/>
	</bean>
	
	<bean id="mealUsingConstructorInjectionWithIndex" class="food.Meal">
		<constructor-arg index="0" ref="cheeseUsingPNamespace"/>
		<constructor-arg index="1" ref="fruitWithListAndMap"/>
		<constructor-arg index="2" ref="grain"/>
		<constructor-arg index="3" ref="meatUsingExternalProperties"/>
		<constructor-arg index="4" ref="vegWithName"/>
	</bean>
	
	<bean id="mealUsingConstructorInjectionWithName" class="food.Meal">
		<constructor-arg name="grain" ref="grain"/>
		<constructor-arg name="meat" ref="meatUsingExternalProperties"/>
		<constructor-arg name="vegetable" ref="vegWithName"/>
		<constructor-arg name="fruit" ref="fruitWithListAndMap"/>
		<constructor-arg name="cheese" ref="cheeseUsingPNamespace"/>
	</bean>
	
	<bean id="mealWithInnerBean" class="food.Meal">
		<property name="vegetable">
			<bean id="onionInnerBean" class="food.Onion">
				<property name="name" value="onion"/>
				<property name="description" value="I am an onion. I have layers."/>
			</bean>
		</property>
	</bean>
	
	<bean id="fruitWithInitAndDestroy" class="food.Fruit" init-method="init" destroy-method="destroy"/>
	
	<!--
		-Spring attempts to automatically figure out how beans are connected
		-Reduces need for manual configuration
		-AutoWiring Types: byType, byName, constructor, no, default
		-Explicit configuration overrides any auto-wiring
		-Can become confusing, Spring sets up the configuration behind the scenes
	-->
	<bean id="cheese" class="food.Cheese" primary="true"/>
	<!-- grain is declared above -->
	<bean id="fruit" class="food.Fruit" primary="true"/>
	<bean id="meat" class="food.Meat" primary="true">
		<property name="definition" value="${def-meat}" />
	</bean>
	<bean id="vegetable" class="food.Vegetable" primary="true"/>
	
	
	<!-- Autowiring byType: Only works when there is 1 of each food item in the applicationContext 
			Unless specifying which bean is the primary of the two duplicate types
	<bean id="grainPrimary" class="food.Grain" primary="true"></bean>
			Or unless specifying the specific bean is not an autowiring candidate
	<bean id="grainDuplicate" class="food.Grain" autowire-candidate="false"></bean>-->
	<bean id="mealAutowiredByType" class="food.Meal" autowire="byType"/>
	
	<!-- Autowiring byName-->
	<bean id="mealAutowiredByName" class="food.Meal" autowire="byName" />
	
	<!-- Autowiring by constructor -->
	<bean id="mealAutowiredByConstructor" class="food.Meal" autowire="constructor"/>
	
	<!-- Autowiring by default 
	setting the "default-autowire="byType">" in the root beans declaration to a specific autowiring method
	in this case it is set to byType, so when there is no specified autowiring, it goes to byType by default-->
	<bean id="mealAutowiredByDefault" class="food.Meal"/>
</beans>
